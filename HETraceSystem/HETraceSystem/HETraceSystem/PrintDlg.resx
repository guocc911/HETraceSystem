<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btScanlink.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAAWJLR0SX5m4brwAAACV0RVh0ZGF0ZTpj
        cmVhdGUAMjAxNS0wNy0yNVQyMTo0OTozMyswODowMN9MHmQAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTQt
        MDktMTdUMTE6MTQ6NDUrMDg6MDBoo5RjAAAATnRFWHRzb2Z0d2FyZQBJbWFnZU1hZ2ljayA2LjguOC0x
        MCBRMTYgeDg2XzY0IDIwMTUtMDctMTkgaHR0cDovL3d3dy5pbWFnZW1hZ2ljay5vcmcFDJw1AAAAGHRF
        WHRUaHVtYjo6RG9jdW1lbnQ6OlBhZ2VzADGn/7svAAAAGHRFWHRUaHVtYjo6SW1hZ2U6OkhlaWdodAA1
        MTKPjVOBAAAAF3RFWHRUaHVtYjo6SW1hZ2U6OldpZHRoADUxMhx8A9wAAAAZdEVYdFRodW1iOjpNaW1l
        dHlwZQBpbWFnZS9wbmc/slZOAAAAF3RFWHRUaHVtYjo6TVRpbWUAMTQxMDkyMzY4NRMX+AgAAAATdEVY
        dFRodW1iOjpTaXplADYuMjFLQkJzuoo6AAAAWnRFWHRUaHVtYjo6VVJJAGZpbGU6Ly8vaG9tZS93d3dy
        b290L3d3dy5lYXN5aWNvbi5uZXQvY2RuLWltZy5lYXN5aWNvbi5jbi9zcmMvMTE3NTYvMTE3NTY0Ni5w
        bmelzCeoAAAEHElEQVR4Xu2bXYgNUQDH717sWg/YUj5Cm/LAo6LkY4l9UOQjD8uTF6SUSO2i9e5NJB4U
        m1j3YUnigdS2+6KElfLxIF4U8rXFrv32/9kz23XdmZ257szOnXu2fs61e+ec//8/Z86cmTmTShX4c+/N
        iZSYL86LT2JYjEQEbX0UZ8U8tET6Y8zXqMxEbDw3YIJoFWiJJgNjnr1/QAxGtMe9etaANOxxdIWegmlo
        ispbMTDvBNMmLWgK3T97HqpFe4wCQAuabAChJ2B7gD0E7BhgB0F7FrCnQTsP8DMRGtKh0id6RU+BsG2/
        oC6v6XDkE6EqCeJKrEPcEGdEo7k+4Bphr2gQm8UGUVcgG7XdFlMXdVI3NJk2aRsNaEFT6PMgZypcocam
        msFwMg1H0rix57SnkrbpjYCm8AOwLZgEGluWpkRaVIlqMV3MFYvFMrFG1BUJ6qJO6qYN2qJN2kZDOPsl
        y+Q0fV5kTO1QeVKcEy3ivmgXD8Vr8V58FT9FT5GgLuqkbtqgLdqkbTSgpVlsF6uNVjQHCyfL8Bx9Xi+O
        i6uiQ7wzpgZUjsQUtBHWW6P5isom42V23kCMabpzjdgpLovnpqLhmBoNsgPwQCjPxCVBD8YrnlP8U2mM
        d6r8lQDD44XTK494ZWdXEgDHzvcyMJ4bDJ6bCaC7DM07YXQTwHhdppT+Pig/DICPxBc/3pIUwAcZPiw4
        Xc8UKwQDuudZKykB9Mvo/rGRXdMi83mGyjavnpCUALpkkvP8XzNCE8I2lQSU91BOSgDMCpka5wtgrX7P
        jDTRAbyUwQXZATiHg8pdXuNAUnrAkEweE2NzfxMAh8WDchgD6N5MbE6J5YKrxk3iriAc11N5UnqAYxCz
        3wRXja7HfXYgSQsg8KTNBuB1fJTD32wPKIe9XE5nATsIBu3RdgwImljSvu/VA7iRwH33a6K1REE7Hlxv
        ingF8EMb8kSG70wqUdCOB7wEvhxmo1UEUKo/ZufhoXgBZD2Z5XG082R2oss/j8Zznw6HGQANnhadgsUJ
        Ewka0PLP+oAwA/CzQiSqpfO0k3eFiA1gdAAveAzghsJBwePmdWIJid55dTS26wTRZvY6WtGMdjx43hTl
        aYrbHJqHpWzMbWWerKYzT/bFNgC0odFoRTPavR74DrIB99T9XESwTiB9/XF8A0CbCQCtfjx1sUG9eCqY
        LXFPjR6RC5Wx2CCdiXEAaDMBoBXN+bzgEa94rneOmVr9Z6tocGG3fr9SVNx+cSS2hwDa0Gi0otnND17x
        HHyOZyYcJXEaDO7OxxY2APvChH1hIraDYCRLZe0YMDoGxO3FSVaNR/riJCEcElG+MO12dcm7BCylj27F
        umlslso4vD57UzrQ4uMkXqSvZN0VqtXni+JzxL2Bnscr+xfEwv/Z+78BQWEgFiilBJwAAAAASUVORK5C
        YII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAALcD7AC3A+wQtwPsbLcD7Hy3A+x4twPseLcD7HijF/AuXXe8LkmLwHpJi8B6SYvAekmLwH5Ji
        8BuSYvAEkmLwAC3A+wAtwPsbLcD7xi3A++ItwPvgLcD74S3A++AoxfxOl13vTpJi8OCSYvDhkmLw4JJi
        8OKSYvDGkmLwG5Ji8AAtwPsALcD7Hi3A++AtwPv/LcD7/y3A+/8twPv+KMX8WZdd71mSYvD+kmLw/5Ji
        8P+SYvD/kmLw4JJi8B6SYvAALcD7AC3A+x4twPvgLcD7/y3A+/8twPv/LcD7/ijF/FmXXe9YkmLw/pJi
        8P+SYvD/kmLw/5Ji8OCSYvAekmLwAC3A+wAtwPsbLcD7xS3A++ItwPvgLcD74C3A+98nxfxNll7wWZJi
        8P6SYvD/kmLw/5Ji8P+SYvDgkmLwHpJi8AAut/oALrf6BC63+h0ut/ohLrf6IS63+iEut/ohAOj/CJNh
        8FySYvD+kmLw/5Ji8P+SYvD/kmLw4JJi8B6SYvAANkL0ADZC9BQ2QvSTNkL0qDZC9Kc2QvSnNkL0pi8/
        9DiVY/BakmLw/pJi8P+SYvD/kmLw/5Ji8OCSYvAekmLwADZD9AA2Q/QeNkP04DZD9P82Q/T/NkP0/zZD
        9P4zQvRam2TvOJRh8KaUYfCnlGHwp5Rh8KiUYfCTlGHwFJRh8AA2Q/QANkP0HjZD9OA2Q/T/NkP0/zZD
        9P82Q/T+NkL0XADD/wgLlP4hC5T+IQuU/iELlP4hC5T+HQuU/gQLlP4ANkP0ADZD9B42Q/TgNkP0/zZD
        9P82Q/T/NkP0/jg/9FkAnf9NAJj/3wCY/+AAmP/gAJj/4gCY/8UAmP8bAJj/ADZD9AA2Q/QeNkP04DZD
        9P82Q/T/NkP0/zZD9P45P/NYAJz/WQCY//4AmP//AJj//wCY//8AmP/gAJj/HgCY/wA2Q/QANkP0HjZD
        9OA2Q/T/NkP0/zZD9P82Q/T+OT/zWQCc/1kAmP/+AJj//wCY//8AmP//AJj/4ACY/x4AmP8ANkP0ADZD
        9Bs2Q/TGNkP04jZD9OA2Q/ThNkP04Dk/804AnP9OAJj/4ACY/+EAmP/gAJj/4gCY/8YAmP8bAJj/ADZD
        9AA2Q/QENkP0GzZD9B82Q/QeNkP0HjZD9B45P/MLAJz/CwCY/x4AmP8eAJj/HgCY/x8AmP8bAJj/BACY
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA//8AAIABAACAAQAAgAEAAIABAACAAQAAgAEAAIABAACAAQAAgAEAAIABAACAAQAAgAEAAIAB
        AACAAQAA//8AAA==
</value>
  </data>
</root>