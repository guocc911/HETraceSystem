<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACAhIQAjJCQEBwgIKAAAABsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAfCAkJJSosLAIhIyMAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfICAAIyYmACMlJRkfICCEBwgI5QAAAM8AAABFAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAFQAAADXCQkJ4CAiIngjJSUUIiUlACAi
        IgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEjIwAgIiICIiQkRB8hIcYUFRX9AgIC/wAA
        AP8AAADYAwsOMTXo/xQw0PkzL9D5TC/Q+Vsv0PlaL9D5SjDQ+TE27f8SAQYIQAAAAOQAAAD/AwMD/xMU
        FPweICC8IiQkOiQkJAAiIyMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAISMjACIkJAUhIyNnGxwc6AsM
        DP8BAQH/AAAA/wMND/8PQEz/I5m40y3O+9EryfjvKsb3+inF9/0pxff9Ksb3+SvJ+O0tzfrOII6s2Q46
        Rf8DCgz/AAAA/wEBAf8KCgr/GRsb4SEjI1klKCgCIiQkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhIyMAIiQkBCEj
        I3AXGBjyBQUF/wAAAP8AAAD/Bh4o/x6Rtv8pwfD/JsH3/yO79f8iuPT/Ibf0/yG39P8ht/T/Ibf0/yK4
        9P8juvX/JsH3/yi/7v8ch6v/BBYe/wAAAP8AAAD/BAUF/xUWFu0gIiJhKSsrAiIkJAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAi
        IgAwMTEAISMjYhYXF/IEBAT/AAAA/wAAAP8AAAD/BRoj/xmW0v8ht/b/Ibf0/yG39P8ht/T/Ibf0/yG3
        9P8ht/T/Ibf0/yG39P8ht/T/Ibf0/yC39/8Yjcb/AxIZ/wAAAP8AAAD/AAAA/wMDA/8TFRXsISMjUxga
        GgAiIyMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAHR8fACEjIwAiJCQ9FxkZ5AQEBP8AAAD/AAAA/wAAAP8AAAD/AAAA/wtLcP8cq/H/Ibf0/yG3
        9P8ht/T/Ibf0/yG39P8ht/T/Ibf0/yG39P8ht/T/Ibf0/xun7f8KQF//AAAA/wAAAP8AAAD/AAAA/wAA
        AP8DAwP/FRYW2iIkJDAgIiIAICMjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAISMjACQmJhMbHR27BwcH/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wIO
        Ff8Te7b/HrL2/yG39P8ht/T/Ibf0/yG39P8ht/T/Ibf0/yG39P8ht/T/HrH1/xFxp/8BCQ3/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/BgYG/xkaGqwnKSkMISMjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgISEAHR8fACAiImsODw/8AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAEB/wcGBf8WO0//Gpvg/yC09f8huPT/Irn0/yO69f8juvX/Irn0/yG49P8ftPX/GpXY/xYz
        RP8IBwb/AQEB/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wwMDPceICBZGxwcACAhIQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhIyMAJScnGBgZGc0DAwP/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8DAwP/EhMT/x4gIP8hIyP/H2KB/ya78P8ryPj/Lcv4/y3M+P8tzPj/Lcv4/yvI
        +P8luO3/H1h0/yEiIv8fISH/ExQU/wQEBP8AAAD/AAAA/wAAAP8AAAD/AAAA/wICAv8VFha+KCoqDyEj
        IwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8fHwAfISEAICIiXA0O
        DvsAAAD/AAAA/wAAAP8AAAD/AAAA/wYHB/8ZGhr/ISMj/yEjI/8hISD/IzY6/yyuz/8v0fv/L8/5/y/P
        +f8vz/n/L8/5/y/R/P8spcT/IjAz/yEhIf8hIyP/ISMj/xobG/8ICAj/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8LCwv1HyAgSh0fHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAh
        IQAvMjIEGxwcpwUFBf8AAAD/AAAA/wAAAP8AAAD/BwgI/xsdHf8hIyP/ISMj/yEhIf8jOT7/Kpe0/y/L
        9P8uz/r/MNH7/zjU/f841P3/MNH7/y3P+v8uyvL/Ko+p/yIzN/8hIiH/ISMj/yEjI/8cHh7/CQkJ/wAA
        AP8AAAD/AAAA/wAAAP8EBAT/GBkZlP///wAgIiIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACEiIgAlJycdFRYW2gEBAf8AAAD/AAAA/wAAAP8FBgb/Gxwc/yEjI/8hIyP/ISIi/yIx
        NP8rnbv/L9H8/y/Q+/9L1fj/acHX/2ultP9sprT/bcPZ/07W+f8v0Pv/L9H7/yqTrv8iLC//ISIi/yEj
        I/8hIyP/HB4e/wcHB/8AAAD/AAAA/wAAAP8BAQH/ERISzScqKhMgIiIAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACEjIwAiJCRAEBAQ9AAAAP8AAAD/AAAA/wICAv8XGBj/ISMj/yEj
        I/8hIyP/ISMj/yh4jf8vz/r/L9D7/1HM6/9TdX3/HR8g/wkHB/8JCAf/HyEi/1p7g/9Yz+7/L9D7/y/N
        9/8nbX//ISIh/yEjI/8hIyP/ISMj/xkaGv8DAwP/AAAA/wAAAP8AAAD/DA0N7CEjIzAgIiIAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAiIgAgIiJYCwwM+wAAAP8AAAD/AAAA/w8Q
        EP8hIyP/ISMj/yEjI/8hIiH/Izk//y232/8u0fv/Ps/1/0NqdP8FAwP/AQEB/wUFBf8EBAT/AQEA/wYF
        BP9Oc3z/Q9L3/y7R/P8srtD/IjI1/yEiIv8hIyP/ISMj/yEjI/8REhL/AAAA/wAAAP8AAAD/CQkJ9h4g
        IEYeHx8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0fHwAfISEXBgcHcAAA
        ALUBBwjoBw0P/x0eHv8hISD/ISAf/yEgIP8hHhz/JVpo/y/N9v8v0fz/QKvH/xEUFf8FBQX/EBAQ/xMT
        E/8TExP/EBAQ/wQEBP8WGRr/SrLN/y/R/P8uyfH/JE5Z/yEeHf8hICD/ISAf/yEhIP8eICD/CQ8R/wEG
        B+QAAACwBAUFaBsdHRIZGxsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAQjmbd+IpW6/yF6nv8iaYT/JWBw/yVUYP8kS1T/KYae/y/Q+v8w0v3/Kn6U/wYF
        BP8SEhL/FBQU/xQUFP8UFBT/FBQU/xEREf8GBAT/KnyT/zDS/f8vz/j/KHuR/yRLVf8lVWH/JWFx/yJq
        hv8hfKH/I5e8/iGVsmsAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADDR/AAw0vxwKsn7/yG59/8lwPj/L834/y/L9P8uyPH/L8z1/y/P
        +f8w0v3/G26G/wwKCf8UFBT/FBQU/xQUFP8UFBT/FBQU/xQUFP8LCQn/GWmC/y/R/P8vz/n/L8v0/y7J
        8f8vy/T/L874/ybB+P8huff/Ksj6/TDS/Fww0fwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC/P+QAv0PliK8n4/yK49P8pxff/L8/5/y/P
        +f8vz/n/L8/5/y/P+f8w0v3/IYel/xETFP8UFBT/EhIS/xISEv8SEhL/EhIS/xQUFP8REhT/H4Gg/zDS
        /P8vz/n/L8/5/y/P+f8vz/n/L8/5/yrG9/8iuPT/K8j4+y/Q+U8vz/kAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC/P+QAvz/lGLcz49yS8
        9f8syvj/L8/5/y/P+f8vz/n/L8/5/y/P+f8v0Pv/Krbe/xUyP/8XFRT/SkpK/3h4eP93d3f/SEhH/xYU
        E/8TLz3/KLLa/y/R+/8vz/n/L8/5/y/P+f8vz/n/L8/5/yzK+P8kvPX/Lcz48C/P+TYvz/kAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7O
        +QAuzvkkL8754inE9/8uzfj/L8/5/y/P+f8vz/n/L8/5/y/P+f8vz/n/L9D6/yGRtP8hNkH/nJub/8zK
        yv/Mysr/l5aX/x0yPv8gjK//L8/6/y/P+f8vz/n/L8/5/y/P+f8vz/n/L8/5/y7N+f8pxPf/L8751S7O
        +BguzvgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAC7N+AAtzfgHL8/5si7N+f8vzvn/L8/5/y/P+f8vz/n/L8/5/y/P+f8vz/n/Lcz5/yfC
        9v8incn/MHWR/011iP9Mc4f/LnGO/yCaxv8nwfb/Ls35/y/P+f8vz/n/L8/5/y/P+f8vz/n/L8/5/y/O
        +f8uzfn/L8/5oS3N9wMuzvgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAC3M+AAvz/kAL8/5ZS/P+f0vz/n/L8/5/y/P+f8vz/n/L8/5/y/P
        +f8vz/n/KcX4/yG59/8iu/f/Ibjy/x6t5f8ereX/Ibfx/yK79/8huff/Ksf4/y/P+f8vz/n/L8/5/y/P
        +f8vz/n/L8/5/y/P+f8vz/n4L875Uy/P+QApyfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuzvgALs74Gy/P+c8vz/n/L8/5/y/P
        +f8vz/n/L8/5/y/P+f8uzvr/JLLm/yGQvf8href/Ibj2/yG6+P8huvj/Ibj1/yGr4/8hj7z/Jbbq/y7P
        +v8vz/n/L8/5/y/P+f8vz/n/L8/5/y/P+f8vz/nBLs74Ei7O+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAszPYAMND6AC/P
        +WYvz/n5L8/5/y/P+f8vz/n/L8/5/y/P+f8qyfr/IYav/yEsL/8hRFL/IWWA/yF2mP8hdZf/IWJ8/yFB
        Tf8hLjL/IpG9/yvK+/8vz/n/L8/5/y/P+f8vz/n/L8/5/y/P+fQvz/lVL9D5ACzM9gAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAALs74AC7O+Awvz/mnL8/5/y/P+f8vz/n/L8/5/y7N+f8kufH/IVVp/yEgH/8hISD/ISEg/yEi
        Iv8hIiH/ISEg/yEhIf8hISD/IV94/yW99P8uzvn/L8/5/y/P+f8vz/n/L8/5/y/P+ZYtzfgHLs74AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAK8v2AC/P+QAuzvgjL8/5xS/P+f8vz/n/L8/5/yfE+f8hlMP/IS0x/yEi
        Iv8hIyP/ISMj/yEjI/8hIyP/ISMj/yEjI/8hIiL/ITI4/yGczv8oxfn/L8/5/y/P+f8vz/n/L8/5uC7O
        +Bovz/kAFbHfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7O9wAv0PoAL8/6LS7M9cgv0Pr/Kcb4/yK0
        7v8hVmv/ISEg/yEjI/8hIyP/ISMj/yEjI/8hIyP/ISMj/yEjI/8hIyP/ISIh/yFgef8it/L/Ksj4/y/P
        +f8uy/S9Ls/6Ii/P+QAszPYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHICYAK7jdAAw0
        Powbf5//Ibbx/yGCqf8hKCr/ISMi/yEjI/8hIyP/ISMj/yEjI/8hIyP/ISMj/yEjI/8hIyP/ISIi/yEs
        L/8hi7b/IbXu/xp4lf8KLDWBGGV5AAUWGgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAADAAAAMABCQz/EkZb/yE3QP8hIiH/ISMj/yEjI/8hIyP/ISMj/yEjI/8hIyP/ISMj/yEj
        I/8hIyP/ISMj/yEiIf8hPEb/EEFV/wEGCf8AAAC3AAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAEgEBAc4JCQj/GxoZ/yEiIv8hIyP/ISMj/yEjI/8hIyP/ISMj/yEj
        I/8hIyP/ISMj/yEjI/8hIyP/ISMj/yEjI/8hIiL/GRkY/wcHB/8BAQHCAAAADAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhAREWseICDmISMj/yEjI/8hIyP/ISMj/yEj
        I/8hIyP/ISMj/yEjI/8hIyP/ISMj/yEjI/8hIyP/ISMj/yEjI/8hIyP/ISMj/x0fH+AODw9eAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKCoqACsuLgIhIyMyISMjlSEj
        I+MhIyP+ISMj/yEjI/8hIyP/ISMj/yEjI/8hIyP/ISMj/yEjI/8hIyP/ISMj/yEjI/0hIyPeISMjjCIk
        JCs3OjoBLC8vAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAgIiIAICIiAyEjIyghIyNrISMjqiEjI9UhIyPrISMj9iEjI/ohIyP6ISMj9SEjI+ohIyPSISMjpSEj
        I2QhIiIjICIiAiAiIgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABocHAAhIyMAICIiBCAiIhchIiIuISMjQSEjI0khIyNJISMjQCEj
        IywgIiIVICEhAyEiIgAbHR0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AAD///////8AAP/+H/h//wAA//wf8D//AAD/8AAAD/8AAP/g
        AAAH/wAA/8AAAAP/AAD/gAAAA/8AAP+AAAAB/wAA/wAAAAD/AAD/AAAAAP8AAP4AAAAAfwAA/gAAAAB/
        AAD8AAAAAD8AAPwAAAAAPwAA/AAAAAA/AAD8AAAAAD8AAPwAAAAAPwAA/wAAAAD/AAD/gAAAAf8AAP+A
        AAAB/wAA/4AAAAH/AAD/gAAAAf8AAP+AAAAB/wAA/8AAAAP/AAD/wAAAA/8AAP/gAAAH/wAA/+AAAAf/
        AAD/8AAAD/8AAP/4AAAf/wAA//wAAD//AAD/+AAAH/8AAP/4AAAf/wAA//gAAB//AAD//AAAP/8AAP//
        AAD//wAA///gB///AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>